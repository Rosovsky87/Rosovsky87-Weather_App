[{"C:\\Users\\Rosovsky\\Desktop\\new_weather\\new_weather_app\\src\\index.js":"1","C:\\Users\\Rosovsky\\Desktop\\new_weather\\new_weather_app\\src\\data.js":"2","C:\\Users\\Rosovsky\\Desktop\\new_weather\\new_weather_app\\src\\cityList.jsx":"3","C:\\Users\\Rosovsky\\Desktop\\new_weather\\new_weather_app\\src\\city.jsx":"4","C:\\Users\\Rosovsky\\Desktop\\new_weather\\new_weather_app\\src\\currentCity.jsx":"5","C:\\Users\\Rosovsky\\Desktop\\new_weather\\new_weather_app\\src\\switchBtn.jsx":"6","C:\\Users\\Rosovsky\\Desktop\\new_weather\\new_weather_app\\src\\app.js":"7","C:\\Users\\Rosovsky\\Desktop\\new_weather_2\\new_weather_app\\src\\index.js":"8","C:\\Users\\Rosovsky\\Desktop\\new_weather_2\\new_weather_app\\src\\components\\app\\app.js":"9","C:\\Users\\Rosovsky\\Desktop\\new_weather_2\\new_weather_app\\src\\components\\cityList\\cityList.jsx":"10","C:\\Users\\Rosovsky\\Desktop\\new_weather_2\\new_weather_app\\src\\components\\currentCity\\currentCity.jsx":"11","C:\\Users\\Rosovsky\\Desktop\\new_weather_2\\new_weather_app\\src\\components\\switchBtn\\switchBtn.jsx":"12","C:\\Users\\Rosovsky\\Desktop\\new_weather_2\\new_weather_app\\src\\data\\data.js":"13"},{"size":200,"mtime":1610618745824,"results":"14","hashOfConfig":"15"},{"size":1391,"mtime":1610473922593,"results":"16","hashOfConfig":"15"},{"size":3383,"mtime":1610697799940,"results":"17","hashOfConfig":"15"},{"size":1462,"mtime":1610697833183,"results":"18","hashOfConfig":"15"},{"size":1466,"mtime":1610644441874,"results":"19","hashOfConfig":"15"},{"size":268,"mtime":1610634981682,"results":"20","hashOfConfig":"15"},{"size":4165,"mtime":1610645700343,"results":"21","hashOfConfig":"15"},{"size":225,"mtime":1610728207974,"results":"22","hashOfConfig":"23"},{"size":4555,"mtime":1610727960323,"results":"24","hashOfConfig":"23"},{"size":2612,"mtime":1610727869386,"results":"25","hashOfConfig":"23"},{"size":1048,"mtime":1610727993181,"results":"26","hashOfConfig":"23"},{"size":218,"mtime":1610723246953,"results":"27","hashOfConfig":"23"},{"size":1307,"mtime":1610723276825,"results":"28","hashOfConfig":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"49xga4",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"f7m4u4",{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"C:\\Users\\Rosovsky\\Desktop\\new_weather\\new_weather_app\\src\\index.js",[],["61","62"],"C:\\Users\\Rosovsky\\Desktop\\new_weather\\new_weather_app\\src\\data.js",[],"C:\\Users\\Rosovsky\\Desktop\\new_weather\\new_weather_app\\src\\cityList.jsx",["63","64","65"],"C:\\Users\\Rosovsky\\Desktop\\new_weather\\new_weather_app\\src\\city.jsx",["66","67","68"],"C:\\Users\\Rosovsky\\Desktop\\new_weather\\new_weather_app\\src\\currentCity.jsx",["69","70"],"import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport SwitchBtn from './switchBtn';\r\n\r\n\r\n\r\nconst Container = styled.div`\r\nmargin-bottom: 5px;\r\n`;\r\n// border: 1px solid red;\r\n// border-radius:5px;\r\n\r\n// const WrapperHeader = styled.div`\r\n// margin: 5px ;\r\n// display: flex;\r\n// justify-content: space-between;\r\n// `\r\n\r\nconst WrapperBody = styled.div`\r\nmargin: 5px ;\r\ndisplay: flex;\r\njustify-content: space-evenly;\r\n\r\n`\r\n// padding: 5px;\r\n\r\nconst WrapperBottom = styled.div`\r\nfont-size: 14px;\r\nmargin: 5px ;\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n`\r\n// justify-content:space-evenly ;\r\n\r\nexport default class CurrentCity extends Component {\r\n\r\n\trender() {\r\n\r\n\t\tconst { cityName, country, temp, feelsLike, maimWeather, desWeather, windSpeed, windDer, weatherIcon } = this.props.city;\r\n\r\n\t\tconst cityTemp = cityName ?\r\n\t\t\t<>\r\n\t\t\t\t{/* <WrapperHeader>\r\n\t\t\t\t\t<h4>{`${cityName} (${country}) `}</h4>\r\n\t\t\t\t\t<SwitchBtn onSwitch={this.props.onSwitch} />\r\n\t\t\t\t</WrapperHeader> */}\r\n\t\t\t\t<WrapperBody>\r\n\t\t\t\t\t<img src={weatherIcon} alt=\"изображение\"\r\n\t\t\t\t\t\twidth=\"90\" height=\"90\" />\r\n\t\t\t\t\t<h1>{temp}º C</h1>\r\n\t\t\t\t</WrapperBody>\r\n\t\t\t\t<WrapperBottom>\r\n\t\t\t\t\t<div>wind: {windSpeed}m/sec. {windDer}</div>\r\n\t\t\t\t\t<div>feels like: {feelsLike}º C</div>\r\n\t\t\t\t\t<div>{maimWeather}: {desWeather}</div>\r\n\t\t\t\t</WrapperBottom>\r\n\t\t\t</>\r\n\t\t\t: null;\r\n\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t{ cityTemp}\r\n\t\t\t</Container>\r\n\t\t)\r\n\t}\r\n}\r\n","C:\\Users\\Rosovsky\\Desktop\\new_weather\\new_weather_app\\src\\switchBtn.jsx",["71"],"import React, { Component } from 'react';\r\nimport { FiSettings } from \"react-icons/fi\";\r\n\r\n\r\n\r\nexport default class SwitchBtn extends Component {\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div onClick={this.props.onSwitch} >\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</ div>\r\n\r\n\t\t)\r\n\t}\r\n}\r\n","C:\\Users\\Rosovsky\\Desktop\\new_weather\\new_weather_app\\src\\app.js",["72","73","74","75","76","77","78","79","80","81"],"import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport WeatherData from './data';\r\nimport CityList from './cityList';\r\nimport CurrentCity from './currentCity';\r\nimport '@atlaskit/css-reset';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport styled from 'styled-components';\r\nimport { FiSettings, FiX } from \"react-icons/fi\";\r\nimport SwitchBtn from './switchBtn';\r\n\r\n// const Wrapper = styled.div`\r\n// border: 3px solid red;\r\n// `\r\n\r\nconst Container = styled.div`\r\nwidth: 195px;\r\nheight:250px;\r\nborder: 3px solid PowderBlue;\r\nborder-radius:15px;\r\nmargin: 15px 0 0 75%;\r\nbackground-color: Azure;\r\nalign-items: stretch;\r\n`;\r\n// display: flex;\r\n// position: fixed;\r\n\r\nconst MainHeader = styled.div`\r\nmargin: 10px 10px;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\n`\r\nconst Title = styled.h4`\r\n`;\r\n// padding: 5px;\r\n\r\n\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n\tconst result = Array.from(list);\r\n\tconst [removed] = result.splice(startIndex, 1);\r\n\tresult.splice(endIndex, 0, removed);\r\n\treturn result;\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n\tweatherData = new WeatherData();\r\n\r\n\tstate = {\r\n\t\tcitysList: [],\r\n\t\tcity: {},\r\n\t\tseeCityList: false,\r\n\t}\r\n\r\n\r\n\tcomponentDidMount = (cityName = 'London') => {\r\n\t\tthis.updateWeather(cityName);\r\n\t}\r\n\r\n\r\n\tonCityLoaded = (city) => {\r\n\t\tthis.addCity(city);\r\n\t\tthis.setState({\r\n\t\t\tcity: city,\r\n\t\t});\r\n\t}\r\n\r\n\tunique = (arr) => {\r\n\t\treturn arr.reduce((acc, el) => {\r\n\t\t\treturn acc.some(item => el.cityName === item.cityName || el.id === item.id) ? acc : [...acc, el]    //эта строка позволяет проверять по нескольким свойствам, а не одному\r\n\t\t}, []);\r\n\t}\r\n\r\n\taddCity = (city) => {\r\n\t\tthis.setState(({ citysList }) => {\r\n\t\t\tconst newCitysList = citysList;\r\n\t\t\tnewCitysList.unshift(city);\r\n\t\t\tlet result = this.unique(newCitysList);\r\n\t\t\tlet a = result.length > 5 ? result.pop() : null;\r\n\t\t\t// console.log(result);\r\n\t\t\treturn {\r\n\t\t\t\tcitysList: result\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tupdateWeather = (cityName) => {\r\n\t\tthis.weatherData.getWeather(cityName)\r\n\t\t\t.then(city => {\r\n\t\t\t\tlet { cityName } = city;\r\n\r\n\t\t\t\tif (cityName.includes('Oblast') || cityName.includes(`Oblast’`)) {\r\n\t\t\t\t\tcityName = cityName.split(' ');\r\n\t\t\t\t\tlet a = cityName.splice(1, 1);\r\n\t\t\t\t\tcityName = cityName.join();\r\n\t\t\t\t\tcity.cityName = cityName\r\n\t\t\t\t}\r\n\t\t\t\treturn this.onCityLoaded(city);\r\n\t\t\t})\r\n\t}\r\n\r\n\tonSwitch = () => {\r\n\t\tconsole.log(this.state.seeCityList)\r\n\t\tthis.setState(({ seeCityList }) => {\r\n\t\t\treturn {\r\n\t\t\t\tseeCityList: !seeCityList\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\r\n\t//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\tonDragEnd = (result) => {\r\n\t\tconsole.log('движение окончено');\r\n\t\tif (!result.destination) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst citysList = reorder(\r\n\t\t\tthis.state.citysList,\r\n\t\t\tresult.source.index,\r\n\t\t\tresult.destination.index\r\n\t\t);\r\n\r\n\t\tthis.setState({\r\n\t\t\tcitysList\r\n\t\t});\r\n\t}\r\n\t//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n\tshowMainHeader = (cityName, country, icon) => {\r\n\t\tconst newTitle = cityName ? (<Title>{cityName} ({country})</Title>) : (<Title>settings</Title>)\r\n\r\n\t\treturn (\r\n\t\t\t<MainHeader>\r\n\t\t\t\t{newTitle}\r\n\t\t\t\t<SwitchBtn onSwitch={() => this.onSwitch()}>{icon}</SwitchBtn>\r\n\t\t\t</MainHeader>\r\n\t\t)\r\n\t}\r\n\r\n\tonDeleteCity = (city) => {\r\n\t\tconsole.log(city);\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst { city, citysList, seeCityList } = this.state;\r\n\t\tconst { cityName, country, temp, feelsLike, maimWeather, desWeather, windSpeed, windDer, weatherIcon } = city;\r\n\r\n\r\n\t\tconst visible = seeCityList ? (\r\n\t\t\t<CityList\r\n\t\t\t\tcitysList={citysList}\r\n\t\t\t\tupdateWeather={(cityName) => this.updateWeather(cityName)}\r\n\t\t\t\tonSwitch={this.onSwitch}\r\n\t\t\t\tonDeleteCity={(cityName) => this.onDeleteCity(cityName)}\r\n\t\t\t/>\r\n\t\t) : <CurrentCity city={city} onSwitch={this.onSwitch} />\r\n\r\n\t\tconst mainHeader = seeCityList ? this.showMainHeader(null, null, <FiX />) : this.showMainHeader(cityName, country, <FiSettings />)\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<DragDropContext onDragEnd={this.onDragEnd} >\r\n\t\t\t\t<Container >\r\n\t\t\t\t\t{mainHeader}\r\n\t\t\t\t\t{visible}\r\n\t\t\t\t</Container >\r\n\r\n\t\t\t</DragDropContext >\r\n\t\t)\r\n\t}\r\n}","C:\\Users\\Rosovsky\\Desktop\\new_weather_2\\new_weather_app\\src\\index.js",[],["82","83"],"C:\\Users\\Rosovsky\\Desktop\\new_weather_2\\new_weather_app\\src\\components\\app\\app.js",["84","85"],"import React, { Component } from 'react';\r\nimport WeatherData from '../../data/data';\r\nimport CityList from '../cityList/cityList';\r\nimport CurrentCity from '../currentCity/currentCity';\r\nimport SwitchBtn from '../switchBtn/switchBtn';\r\nimport { DragDropContext } from 'react-beautiful-dnd';\r\nimport { FiSettings, FiX } from \"react-icons/fi\";\r\nimport styled from 'styled-components';\r\nimport '@atlaskit/css-reset';\r\n\r\n\r\nconst Container = styled.div`\r\nwidth: 195px;\r\nheight:250px;\r\nborder: 3px solid PowderBlue;\r\nborder-radius:15px;\r\nmargin: 15px 0 0 75%;\r\nbackground-color: Azure;\r\nalign-items: stretch;\r\n`;\r\n\r\nconst MainHeader = styled.div`\r\nmargin: 10px 10px;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-items: center;\r\n`;\r\n\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n\tconst result = Array.from(list);\r\n\tconst [removed] = result.splice(startIndex, 1);\r\n\tresult.splice(endIndex, 0, removed);\r\n\treturn result;\r\n};\r\n\r\n\r\nexport default class App extends Component {\r\n\r\n\tweatherData = new WeatherData();\r\n\r\n\tstate = {\r\n\t\tcitysList: [],\r\n\t\tcity: {},\r\n\t\tseeCityList: true,\r\n\t}\r\n\r\n\tcomponentWillMount = () => {\r\n\t\tlocalStorage.getItem(\"user_city\") &&\r\n\t\t\tlocalStorage.getItem(\"user_settings\") &&\r\n\t\t\tlocalStorage.getItem(\"user_sees\") &&\r\n\t\t\tthis.setState({\r\n\t\t\t\tcity: (JSON.parse(localStorage.getItem(\"user_city\"))),\r\n\t\t\t\tcitysList: (JSON.parse(localStorage.getItem(\"user_settings\"))),\r\n\t\t\t\tseeCityList: (JSON.parse(localStorage.getItem(\"user_sees\")))\r\n\t\t\t})\r\n\t}\r\n\r\n\tcomponentDidMount = () => {\r\n\t\tif (localStorage.getItem(\"user_city\")) {\r\n\t\t\tthis.updateWeather();\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidUpdate = (nextProps, { city, citysList, seeCityList }) => {\r\n\t\tlocalStorage.setItem(\"user_city\", JSON.stringify(city));\r\n\t\tlocalStorage.setItem(\"user_settings\", JSON.stringify(citysList));\r\n\t\tlocalStorage.setItem(\"user_sees\", JSON.stringify(seeCityList));\r\n\t}\r\n\r\n\tonCityLoaded = (city) => {\r\n\t\tthis.addCity(city);\r\n\t\tthis.setState({ city: city });\r\n\t}\r\n\r\n\tunique = (arr) => {\r\n\t\treturn arr.reduce((acc, el) => {\r\n\t\t\treturn acc.some(item => el.cityName === item.cityName || el.id === item.id) ? acc : [...acc, el]\r\n\t\t}, []);\r\n\t}\r\n\r\n\taddCity = (city) => {\r\n\t\tthis.setState(({ citysList }) => {\r\n\t\t\tconst newCitysList = citysList;\r\n\t\t\tnewCitysList.unshift(city);\r\n\t\t\tlet result = this.unique(newCitysList);\r\n\t\t\tlet a = result.length > 5 ? result.pop() : null;\r\n\t\t\treturn {\r\n\t\t\t\tcitysList: result\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tupdateWeather = (cityName) => {\r\n\t\tif (!cityName) { this.setState({ seeCityList: !this.state.seeCityList }) }\r\n\t\telse {\r\n\t\t\tthis.weatherData.getWeather(cityName)\r\n\t\t\t\t.then(city => {\r\n\t\t\t\t\tlet { cityName } = city;\r\n\t\t\t\t\tif (cityName.includes('Oblast') || cityName.includes(`Oblast’`)) {\r\n\t\t\t\t\t\tcityName = cityName.split(' ');\r\n\t\t\t\t\t\tlet a = cityName.splice(1, 1);\r\n\t\t\t\t\t\tcityName = cityName.join();\r\n\t\t\t\t\t\tcity.cityName = cityName;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this.onCityLoaded(city);\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tonSwitch = () => {\r\n\t\tthis.setState(({ seeCityList: !this.state.seeCityList }))\r\n\t}\r\n\r\n\tonDragEnd = (result) => {\r\n\t\tif (!result.destination) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst citysList = reorder(\r\n\t\t\tthis.state.citysList,\r\n\t\t\tresult.source.index,\r\n\t\t\tresult.destination.index\r\n\t\t);\r\n\t\tthis.setState({ citysList });\r\n\t}\r\n\r\n\tshowMainHeader = (cityName, country, icon) => {\r\n\t\tconst newTitle = cityName ? (<h4>{cityName} ({country})</h4>) : (<h4>settings</h4>)\r\n\t\treturn (\r\n\t\t\t<MainHeader>\r\n\t\t\t\t{newTitle}\r\n\t\t\t\t<SwitchBtn onSwitch={() => this.onSwitch()}>{icon}</SwitchBtn>\r\n\t\t\t</MainHeader>\r\n\t\t)\r\n\t}\r\n\r\n\tonDeleteCity = (city) => {\r\n\r\n\t\tthis.setState(({ citysList }) => {\r\n\t\t\tconst newCitysList = citysList.filter(el => el.cityName !== city);\r\n\t\t\tnewCitysList.length === 0 ? this.setState({ seeCityList: true }) : this.updateWeather(newCitysList[0].cityName);\r\n\t\t\treturn {\r\n\t\t\t\tcitysList: newCitysList\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\r\n\trender() {\r\n\r\n\t\tconst { city, citysList, seeCityList } = this.state;\r\n\t\tconst { cityName, country } = city;\r\n\r\n\t\tconst mainHeader = seeCityList ? this.showMainHeader(null, null, <FiX />) : this.showMainHeader(cityName, country, <FiSettings />)\r\n\r\n\t\tconst visible = seeCityList ? (\r\n\t\t\t<CityList\r\n\t\t\t\tcitysList={citysList}\r\n\t\t\t\tupdateWeather={(cityName) => this.updateWeather(cityName)}\r\n\t\t\t\tonSwitch={this.onSwitch}\r\n\t\t\t\tonDeleteCity={(cityName) => this.onDeleteCity(cityName)}\r\n\t\t\t/>\r\n\t\t) : <CurrentCity city={city} onSwitch={this.onSwitch} />\r\n\r\n\t\treturn (\r\n\t\t\t<DragDropContext onDragEnd={this.onDragEnd} >\r\n\t\t\t\t<Container >\r\n\t\t\t\t\t{mainHeader}\r\n\t\t\t\t\t{visible}\r\n\t\t\t\t</Container >\r\n\t\t\t</DragDropContext >\r\n\t\t)\r\n\t}\r\n}","C:\\Users\\Rosovsky\\Desktop\\new_weather_2\\new_weather_app\\src\\components\\cityList\\cityList.jsx",[],"C:\\Users\\Rosovsky\\Desktop\\new_weather_2\\new_weather_app\\src\\components\\currentCity\\currentCity.jsx",[],"C:\\Users\\Rosovsky\\Desktop\\new_weather_2\\new_weather_app\\src\\components\\switchBtn\\switchBtn.jsx",[],"C:\\Users\\Rosovsky\\Desktop\\new_weather_2\\new_weather_app\\src\\data\\data.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":5,"column":28,"nodeType":"92","messageId":"93","endLine":5,"endColumn":34},{"ruleId":"90","severity":1,"message":"94","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":17},{"ruleId":"90","severity":1,"message":"95","line":44,"column":7,"nodeType":"92","messageId":"93","endLine":44,"endColumn":12},{"ruleId":"90","severity":1,"message":"96","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":19},{"ruleId":"90","severity":1,"message":"97","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":18},{"ruleId":"90","severity":1,"message":"98","line":36,"column":34,"nodeType":"92","messageId":"93","endLine":36,"endColumn":46},{"ruleId":"90","severity":1,"message":"94","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":17},{"ruleId":"90","severity":1,"message":"99","line":40,"column":21,"nodeType":"92","messageId":"93","endLine":40,"endColumn":28},{"ruleId":"90","severity":1,"message":"100","line":2,"column":10,"nodeType":"92","messageId":"93","endLine":2,"endColumn":20},{"ruleId":"90","severity":1,"message":"101","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":16},{"ruleId":"90","severity":1,"message":"102","line":85,"column":8,"nodeType":"92","messageId":"93","endLine":85,"endColumn":9},{"ruleId":"90","severity":1,"message":"102","line":100,"column":10,"nodeType":"92","messageId":"93","endLine":100,"endColumn":11},{"ruleId":"90","severity":1,"message":"103","line":155,"column":30,"nodeType":"92","messageId":"93","endLine":155,"endColumn":34},{"ruleId":"90","severity":1,"message":"104","line":155,"column":36,"nodeType":"92","messageId":"93","endLine":155,"endColumn":45},{"ruleId":"90","severity":1,"message":"105","line":155,"column":47,"nodeType":"92","messageId":"93","endLine":155,"endColumn":58},{"ruleId":"90","severity":1,"message":"106","line":155,"column":60,"nodeType":"92","messageId":"93","endLine":155,"endColumn":70},{"ruleId":"90","severity":1,"message":"107","line":155,"column":72,"nodeType":"92","messageId":"93","endLine":155,"endColumn":81},{"ruleId":"90","severity":1,"message":"108","line":155,"column":83,"nodeType":"92","messageId":"93","endLine":155,"endColumn":90},{"ruleId":"90","severity":1,"message":"109","line":155,"column":92,"nodeType":"92","messageId":"93","endLine":155,"endColumn":103},{"ruleId":"86","replacedBy":"110"},{"ruleId":"88","replacedBy":"111"},{"ruleId":"90","severity":1,"message":"102","line":87,"column":8,"nodeType":"92","messageId":"93","endLine":87,"endColumn":9},{"ruleId":"90","severity":1,"message":"102","line":102,"column":11,"nodeType":"92","messageId":"93","endLine":102,"endColumn":12},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'FiMenu' is defined but never used.","Identifier","unusedVar","'SwitchBtn' is defined but never used.","'Title' is assigned a value but never used.","'Draggable' is defined but never used.","'FiTrash2' is defined but never used.","'onDeleteCity' is assigned a value but never used.","'country' is assigned a value but never used.","'FiSettings' is defined but never used.","'ReactDOM' is defined but never used.","'a' is assigned a value but never used.","'temp' is assigned a value but never used.","'feelsLike' is assigned a value but never used.","'maimWeather' is assigned a value but never used.","'desWeather' is assigned a value but never used.","'windSpeed' is assigned a value but never used.","'windDer' is assigned a value but never used.","'weatherIcon' is assigned a value but never used.",["112"],["113"],"no-global-assign","no-unsafe-negation"]